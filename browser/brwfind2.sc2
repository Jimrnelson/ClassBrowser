*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="brwfind2.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "browser.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmfind2 AS browserdialog OF "browser.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpResultView" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdFind" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLookIn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLookIn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNewSearch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblContaining" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtContaining" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpSearchFields" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSearchFields" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkItemName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkFileName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkClassName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkProperties" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpItemTypes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblItemTypes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblKeywords" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtKeywordList" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstItemTypes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdKeywordList" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblResultView" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtViewName" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: find
		*m: initview
		*m: newview
		*m: refreshview
		*m: refreshviewvalues
		*m: saveviewvalues
		*p: lcancel
		*p: leditmode
		*p: lnewview
		*p: ncatalogcount
		*a: acatalogs[1,0]
	*</DefinedPropArrayMethod>

	Caption = "Find Component"
	DoCreate = .T.
	Height = 216
	HelpContextID = 1895825655
	lcancel = .T.
	Name = "frmFind2"
	ncatalogcount = 0
	Width = 488

	ADD OBJECT 'cboLookIn' AS combobox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 68, ;
		Name = "cboLookIn", ;
		Style = 2, ;
		TabIndex = 4, ;
		Top = 42, ;
		Width = 324, ;
		ZOrderSet = 3
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'chkClassName' AS checkbox WITH ;
		AutoSize = .T., ;
		Caption = "Class na\<me", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 102, ;
		Name = "chkClassName", ;
		TabIndex = 12, ;
		Top = 123, ;
		Value = .F., ;
		Width = 72, ;
		ZOrderSet = 13
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkDescription' AS checkbox WITH ;
		AutoSize = .T., ;
		Caption = "\<Description", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 18, ;
		Name = "chkDescription", ;
		TabIndex = 10, ;
		Top = 148, ;
		Value = .T., ;
		Width = 71, ;
		ZOrderSet = 11
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkFileName' AS checkbox WITH ;
		AutoSize = .T., ;
		Caption = "File n\<ame", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 18, ;
		Name = "chkFileName", ;
		TabIndex = 11, ;
		Top = 173, ;
		Value = .F., ;
		Width = 63, ;
		ZOrderSet = 12
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkItemName' AS checkbox WITH ;
		AutoSize = .T., ;
		Caption = "\<Item name", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 18, ;
		Name = "chkItemName", ;
		TabIndex = 9, ;
		Top = 123, ;
		Value = .T., ;
		Width = 67, ;
		ZOrderSet = 10
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkProperties' AS checkbox WITH ;
		AutoSize = .T., ;
		Caption = "\<Properties", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 102, ;
		Name = "chkProperties", ;
		TabIndex = 13, ;
		Top = 148, ;
		Value = .F., ;
		Width = 65, ;
		ZOrderSet = 14
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 404, ;
		Name = "cmdCancel", ;
		TabIndex = 19, ;
		Top = 41, ;
		Width = 75, ;
		ZOrderSet = 4
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdFind' AS commandbutton WITH ;
		Caption = "\<Find", ;
		Default = .T., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 404, ;
		Name = "cmdFind", ;
		TabIndex = 18, ;
		Top = 12, ;
		Width = 75, ;
		ZOrderSet = 1
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdKeywordList' AS keywordsbutton WITH ;
		cobjname = this.parent.txtKeywordList, ;
		cproperty = this.parent.txtKeywordList.Value, ;
		FontName = "MS Sans Serif", ;
		Left = 371, ;
		Name = "cmdKeywordList", ;
		TabIndex = 7, ;
		Top = 73, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNewSearch' AS commandbutton WITH ;
		Caption = "\<New Search", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 404, ;
		Name = "cmdNewSearch", ;
		TabIndex = 20, ;
		Top = 71, ;
		Width = 75, ;
		ZOrderSet = 5
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'lblContaining' AS label WITH ;
		AutoSize = .T., ;
		Caption = "\<Containing:", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "lblContaining", ;
		TabIndex = 1, ;
		Top = 16, ;
		Width = 55, ;
		ZOrderSet = 6
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblItemTypes' AS label WITH ;
		AutoSize = .T., ;
		Caption = " Item \<types: ", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 212, ;
		Name = "lblItemTypes", ;
		TabIndex = 14, ;
		Top = 102, ;
		Width = 59, ;
		ZOrderSet = 16
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblKeywords' AS label WITH ;
		AutoSize = .T., ;
		Caption = "\<Keywords:", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 8, ;
		Name = "lblKeywords", ;
		TabIndex = 5, ;
		Top = 76, ;
		Width = 51, ;
		ZOrderSet = 17
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblLookIn' AS label WITH ;
		AutoSize = .T., ;
		Caption = "\<Look in:", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 8, ;
		Name = "lblLookIn", ;
		TabIndex = 3, ;
		Top = 46, ;
		Width = 40, ;
		ZOrderSet = 2
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblResultView' AS label WITH ;
		AutoSize = .T., ;
		Caption = " \<Result view: ", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 350, ;
		Name = "lblResultView", ;
		TabIndex = 16, ;
		Top = 103, ;
		Width = 66, ;
		ZOrderSet = 16
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblSearchFields' AS label WITH ;
		AutoSize = .T., ;
		Caption = " Search fields: ", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 18, ;
		Name = "lblSearchFields", ;
		TabIndex = 8, ;
		Top = 102, ;
		Width = 72, ;
		ZOrderSet = 9
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lstItemTypes' AS listbox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 80, ;
		IntegralHeight = .T., ;
		Left = 212, ;
		MultiSelect = .T., ;
		Name = "lstItemTypes", ;
		TabIndex = 15, ;
		Top = 123, ;
		Width = 108, ;
		ZOrderSet = 19
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'shpItemTypes' AS shape WITH ;
		BackStyle = 0, ;
		Height = 100, ;
		Left = 202, ;
		Name = "shpItemTypes", ;
		SpecialEffect = 0, ;
		Top = 108, ;
		Width = 128, ;
		ZOrderSet = 15
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'shpResultView' AS shape WITH ;
		BackStyle = 0, ;
		Height = 100, ;
		Left = 340, ;
		Name = "shpResultView", ;
		SpecialEffect = 0, ;
		Top = 108, ;
		Width = 140, ;
		ZOrderSet = 0
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'shpSearchFields' AS shape WITH ;
		BackStyle = 0, ;
		Height = 100, ;
		Left = 8, ;
		Name = "shpSearchFields", ;
		SpecialEffect = 0, ;
		Top = 108, ;
		Width = 184, ;
		ZOrderSet = 8
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'txtContaining' AS textbox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Format = "K", ;
		Height = 24, ;
		Left = 68, ;
		Name = "txtContaining", ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 324, ;
		ZOrderSet = 7
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtKeywordList' AS textbox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Format = "K", ;
		Height = 24, ;
		Left = 68, ;
		Name = "txtKeywordList", ;
		TabIndex = 6, ;
		Top = 72, ;
		Width = 299, ;
		ZOrderSet = 18
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtViewName' AS textbox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Format = "K", ;
		Height = 24, ;
		Left = 350, ;
		MaxLength = 32, ;
		Name = "txtViewName", ;
		TabIndex = 17, ;
		Top = 123, ;
		Width = 120, ;
		ZOrderSet = 22
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE find
		WITH this
			.SaveViewValues
			IF .RefreshView(.oHost.oView)=0
				IF .oHost.MsgBox(M_NO_MATCHES_CONTINUE_LOC,292,.Caption)#6
					WITH .oHost.cboViewType
						.RemoveItem(.ListCount)
					ENDWITH
					.oHost.oView.Remove(.F.,.T.)
					RETURN
				ENDIF
			ENDIF
			.lCancel=.F.
			.Hide
			.Release
		ENDWITH
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS oSource
		
		IF NOT DODEFAULT(oSource)
			RETURN .F.
		ENDIF
		IF NOT ISNULL(this.oHost.oView)
			this.lEditMode=this.oHost.oView.lEditMode
		ENDIF
		IF NOT this.InitView() OR NOT this.RefreshViewValues()
			RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE initview
		LOCAL oFolder,lcText,lcText2,lnCount,lnViewTypeCount,lnAtPos
		LOCAL laViewType[1]
		
		IF ISNULL(this.oHost.oView)
			IF NOT this.NewView()
				RETURN .F.
			ENDIF
		ENDIF
		WITH this.oHost.cboViewType
			lnViewTypeCount=.ListCount
			IF lnViewTypeCount=0
				DIMENSION laViewType[1]
			ELSE
				DIMENSION laViewType[lnViewTypeCount]
			ENDIF
			laViewType=""
			FOR lnCount = 1 TO lnViewTypeCount
				laViewType[lnCount]=PROPER(ALLTRIM(.List[lnCount]))+" "
			ENDFOR
		ENDWITH
		WITH this.oHost.oView
			.oHost=this.oHost
			IF EMPTY(.cID)
				.cID=LOWER(SYS(2015))
			ENDIF
			lnCount=1
			lcText=IIF(EMPTY(.cText),PROPER(M_NEW_VIEW_LOC)+" 1",.cText)
			lnAtPos=RAT(" ",lcText)
			IF lnAtPos>0
				lnCount=VAL(SUBSTR(lcText,lnAtPos+1))
				IF lnCount=0
					lnCount=1
				ELSE
					lcText=ALLTRIM(LEFT(lcText,lnAtPos-1))
				ENDIF
			ENDIF
			IF EMPTY(.cText)
				DO WHILE .T.
					lcText2=lcText+" "+ALLTRIM(STR(lnCount))
					IF ASCAN(laViewType,lcText2+" ")=0
						lcText=lcText2
						EXIT
					ENDIF
					lnCount=lnCount+1
				ENDDO
				.cText=lcText
			ENDIF
			IF EMPTY(.cViewAlias)
				.cViewAlias="view_"+STRTRAN(.cText," ","_")
			ENDIF
			IF this.lEditMode
				thisform.Caption=T_EDIT_VIEW_LOC
				thisform.cmdFind.Caption=B_SAVE_LOC
			ENDIF
		ENDWITH
		
	ENDPROC

	PROCEDURE newview
		this.lNewView=.T.
		IF VARTYPE(this.oHost.oView)=="O"
			this.oHost.oView.Release
		ENDIF
		this.oHost.oView=this.oHost.CreateNode("catalog1","VIEW")
		IF ISNULL(this.oHost.oView)
			RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE refreshview
		LPARAMETERS toView,tcSearchAlias
		LOCAL lnResultCount
		
		SET MESSAGE TO M_REFRESH_VIEW_LOC+" ..."
		lnResultCount=this.oHost.RefreshView(toView,tcSearchAlias)
		SELECT 0
		SET MESSAGE TO
		RETURN lnResultCount
		
	ENDPROC

	PROCEDURE refreshviewvalues
		LOCAL oFolder,lnCount,lcText,lnIndex
		
		this.LockScreen=.T.
		IF this.oHost.nFolderCount<1 OR NOT USED("itemtypes") OR ;
				(ISNULL(this.oHost.oView) AND NOT this.NewView())
			this.LockScreen=.F.
			RETURN .F.
		ENDIF
		IF this.nCatalogCount=0
			DIMENSION this.aCatalogs[1]
			this.aCatalogs=""
			WITH this.cboLookIn
				this.nCatalogCount=1
				DIMENSION this.aCatalogs[1]
				this.aCatalogs[1]=M_ALL_CATALOGS_LOC
				.AddItem(M_ALL_CATALOGS_LOC)
				IF this.oHost.nViewType=1
					FOR lnCount = 1 TO this.oHost.nFolderCount
						oFolder=this.oHost.aFolderList[lnCount]
						IF ISNULL(oFolder) OR NOT oFolder.lCatalog
							LOOP
						ENDIF
						lcText=oFolder.cText
						IF EMPTY(lcText) OR ASCAN(this.aCatalogs,lcText)>0
							LOOP
						ENDIF
						this.nCatalogCount=this.nCatalogCount+1
						DIMENSION this.aCatalogs[this.nCatalogCount]
						this.aCatalogs[this.nCatalogCount]=lcText
						.AddItem(lcText)
					ENDFOR
				ENDIF
				.ListIndex=1
			ENDWITH
		ENDIF
		SELECT itemtypes
		SET ORDER TO Text
		LOCATE
		lnCatalogCount=0
		WITH this.lstItemTypes
			.AddItem(M_ALL_TYPES_LOC)
			SCAN ALL
				lcText=ALLTRIM(Text)
				IF EMPTY(lcText)
					LOOP
				ENDIF
				IF LEFT(lcText,1)=="*"
					lcText=SUBSTR(lcText,2)
				ENDIF
				IF LEFT(lcText,1)=="\" OR LEFT(lcText,1)=="~"
					LOOP
				ENDIF
				lcText=STRTRAN(STRTRAN(STRTRAN(lcText,"\",""),"<",""),"-","")
				.AddItem(lcText)
			ENDSCAN
			.ListIndex=1
		ENDWITH
		SELECT 0
		WITH this.oHost.oView
			IF NOT EMPTY(.cContaining)
				this.txtContaining.Value=.cContaining
			ENDIF
			this.cboLookIn.Enabled=(.lLookInEnabled AND this.oHost.nViewType=1)
			IF NOT EMPTY(.cLookIn)
				lnIndex=ASCAN(this.aCatalogs,.cLookIn)
				IF lnIndex=0
					this.cboLookIn.AddItem(.cLookIn)
					this.cboLookIn.ListIndex=this.cboLookIn.ListCount
				ELSE
					this.cboLookIn.ListIndex=lnIndex
				ENDIF
			ENDIF
			IF NOT EMPTY(.cKeywordList)
				this.txtKeywordList.Value=.cKeywordList
			ENDIF
			this.chkItemName.Value=.lItemName
			this.chkDescription.Value=.lDescription
			this.chkFileName.Value=.lFileName
			this.chkClassName.Value=.lClassName
			this.chkProperties.Value=.lProperties
			IF NOT EMPTY(.cItemTypes)
				this.lstItemTypes.Value=.cItemTypes
			ENDIF
			this.txtViewName.Value=PROPER(ALLTRIM(.cText))
		ENDWITH
		this.LockScreen=.F.
		
	ENDPROC

	PROCEDURE saveviewvalues
		thisform.lNewView=.F.
		WITH this.oHost.oView
			.cContaining=this.txtContaining.Value
			.cLookIn=this.cboLookIn.DisplayValue
			.cKeywordList=this.txtKeywordList.Value
			.lItemName=this.chkItemName.Value
			.lDescription=this.chkDescription.Value
			.lFileName=this.chkFileName.Value
			.lClassName=this.chkClassName.Value
			.lProperties=this.chkProperties.Value
			.cItemTypes=this.lstItemTypes.Value
			.cText=PROPER(ALLTRIM(this.txtViewName.Value))
			.cViewAlias="view_"+LOWER(STRTRAN(.cText," ","_"))
			.WriteProperties(.T.)
		ENDWITH
		
	ENDPROC

	PROCEDURE Unload
		RETURN thisform.lCancel
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		if thisform.lnewview
			thisform.oHost.oView.Remove(.F.,.T.)
		endif
		thisform.Release
		
	ENDPROC

	PROCEDURE cmdFind.Click
		thisform.Find
		
	ENDPROC

	PROCEDURE cmdNewSearch.Click
		LOCAL lnCount
		
		thisform.oHost.oView=.NULL.
		thisform.InitView
		thisform.RefreshViewValues
		WITH thisform
			.txtContaining.Value=""
			.cboLookIn.Value=.cboLookIn.List[1]
			.txtKeywordList.Value=""
			.chkItemName.Value=.T.
			.chkDescription.Value=.T.
			.chkFileName.Value=.F.
			.chkClassName.Value=.F.
			.chkProperties.Value=.F.
			WITH .lstItemTypes
				FOR lnCount = 1 TO .ListCount
					.Selected[lnCount]=.F.
				ENDFOR
				.ListIndex=1
			ENDWITH
			.txtContaining.SetFocus
		ENDWITH
		
	ENDPROC

	PROCEDURE txtViewName.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF CHR(nKeyCode)$('/\,-=:;{}[]!@#$%^&*.<>()+|'+CHR(34)+CHR(39))
			NODEFAULT
			RETURN
		ENDIF
		
	ENDPROC

	PROCEDURE txtViewName.Valid
		LOCAL lcValue,oView,lViewNameExists,lnCount
		
		lcValue=LOWER(ALLTRIM(this.Value))
		IF EMPTY(lcValue)
			RETURN .F.
		ENDIF
		lViewNameExists=(lcValue=="default")
		IF NOT lViewNameExists
			oView=thisform.oHost.GetView(lcValue)
			lViewNameExists=(VARTYPE(oView)=="O")
			IF NOT lViewNameExists
				WITH thisform.oHost.cboViewType
					FOR lnCount = 1 TO .ListCount
						IF LOWER(ALLTRIM(.List[lnCount]))==lcValue
							lViewNameExists=.T.
							EXIT
						ENDIF
					ENDFOR
				ENDWITH
			ENDIF
		ENDIF
		IF lViewNameExists
			thisform.oHost.MsgBox(M_VIEW_NAME_EXISTS_LOC,16)
			RETURN
		ENDIF
		lcValue=PROPER(ALLTRIM(lcValue))
		this.Value=lcValue
		
	ENDPROC

ENDDEFINE
