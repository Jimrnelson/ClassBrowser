*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="brwredef.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "browser.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmredefine AS browserdialog OF "browser.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblRedefine" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAs" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDefineClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRedefine" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOfClassLibrary" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAsClass" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: initbaseclasslist
		*m: initopenclasslist
		*p: casclass
		*p: cbaseclass
		*p: cclass
		*p: cclasslibrary
		*p: cparentclass
	*</DefinedPropArrayMethod>

	Caption = "Redefine"
	casclass = 
	cbaseclass = 
	cclass = 
	cclasslibrary = 
	cparentclass = 
	DoCreate = .T.
	Height = 96
	Name = "frmRedefine"
	Width = 352

	ADD OBJECT 'cboAsClass' AS combobox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 24, ;
		InputMask = (REPLICATE("X",64)), ;
		Left = 67, ;
		Name = "cboAsClass", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 4, ;
		Top = 35, ;
		Width = 250
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 269, ;
		Name = "cmdCancel", ;
		TabIndex = 9, ;
		Top = 65, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdOfClassLibrary' AS commandbutton WITH ;
		Caption = "...", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 22, ;
		Left = 323, ;
		Name = "cmdOfClassLibrary", ;
		TabIndex = 7, ;
		Top = 36, ;
		Width = 21
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdRedefine' AS commandbutton WITH ;
		Caption = "\<Redefine", ;
		Default = .T., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 188, ;
		Name = "cmdRedefine", ;
		TabIndex = 8, ;
		Top = 65, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'lblAs' AS label WITH ;
		BackStyle = 0, ;
		Caption = "\<As:", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 8, ;
		Name = "lblAs", ;
		TabIndex = 3, ;
		Top = 39, ;
		Width = 21
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblDefineClass' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Class", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 70, ;
		Name = "lblDefineClass", ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 27
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblRedefine' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Redefine:", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 8, ;
		Name = "lblRedefine", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 51
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE Init
		LPARAMETERS oSource,tcClass,tcParentClass,tcClassLibrary,tcBaseClass
		LOCAL lcClass,lcParentClass
		
		IF PARAMETERS()<5 OR NOT DODEFAULT(oSource)
			RETURN .F.
		ENDIF
		this.cClass=LOWER(ALLTRIM(tcClass))
		this.cBaseClass=LOWER(ALLTRIM(tcBaseClass))
		this.cClassLibrary=LOWER(ALLTRIM(tcClassLibrary))
		this.cParentClass=LOWER(ALLTRIM(tcParentClass))
		IF EMPTY(this.cClassLibrary)
			lcClass=this.cClass
			lcParentClass=this.cParentClass
		ELSE
			lcClass=this.cClass+","+this.cClassLibrary
			lcParentClass=this.cParentClass+","+this.cClassLibrary
		ENDIF
		WITH this.lblDefineClass
			.Caption=lcClass+" ("+this.oHost.ProperBaseClass(this.cBaseClass)+")"
			.ToolTipText=LEFT(.Caption,127)
		ENDWITH
		this.InitBaseClassList
		this.InitOpenClassList
		this.cboAsClass.ListIndex=1
		
	ENDPROC

	PROCEDURE initbaseclasslist
		LOCAL lcBaseClass
		
		lcBaseClass=this.cBaseClass
		WITH this.cboAsClass
			IF NOT this.cParentClass==lcBaseClass
				.AddItem(this.oHost.ProperBaseClass(lcBaseClass))
			ENDIF
			DO CASE
				CASE lcBaseClass=="checkbox"
					.AddItem(this.oHost.ProperBaseClass("OptionButton"))
				CASE lcBaseClass=="combobox"
					.AddItem(this.oHost.ProperBaseClass("Listbox"))
				CASE lcBaseClass=="commandgroup"
					.AddItem(this.oHost.ProperBaseClass("OptionGroup"))
				CASE lcBaseClass=="container"
					.AddItem(this.oHost.ProperBaseClass("Custom"))
				CASE lcBaseClass=="custom"
					.AddItem(this.oHost.ProperBaseClass("Container"))
				CASE lcBaseClass=="editbox"
					.AddItem(this.oHost.ProperBaseClass("TextBox"))
					.AddItem(this.oHost.ProperBaseClass("Spinner"))
					.AddItem(this.oHost.ProperBaseClass("Label"))
				CASE lcBaseClass=="label"
					.AddItem(this.oHost.ProperBaseClass("Textbox"))
					.AddItem(this.oHost.ProperBaseClass("EditBox"))
					.AddItem(this.oHost.ProperBaseClass("Spinner"))
				CASE lcBaseClass=="line"
					.AddItem(this.oHost.ProperBaseClass("Shape"))
				CASE lcBaseClass=="listbox"
					.AddItem(this.oHost.ProperBaseClass("ComboBox"))
				CASE lcBaseClass=="optionbutton"
					.AddItem(this.oHost.ProperBaseClass("CheckBox"))
				CASE lcBaseClass=="optiongroup"
					.AddItem(this.oHost.ProperBaseClass("CommandGroup"))
				CASE lcBaseClass=="shape"
					.AddItem(this.oHost.ProperBaseClass("Line"))
				CASE lcBaseClass=="spinner"
					.AddItem(this.oHost.ProperBaseClass("TextBox"))
					.AddItem(this.oHost.ProperBaseClass("EditBox"))
					.AddItem(this.oHost.ProperBaseClass("Label"))
				CASE lcBaseClass=="textbox"
					.AddItem(this.oHost.ProperBaseClass("EditBox"))
					.AddItem(this.oHost.ProperBaseClass("Spinner"))
					.AddItem(this.oHost.ProperBaseClass("Label"))
			ENDCASE
		ENDWITH
		
	ENDPROC

	PROCEDURE initopenclasslist
		LOCAL lcBaseClass,lcBaseClass2,lcParentClass,lcClassLibrary,lcClass,lcFileName
		LOCAL lcRedefine,lnCount,lnClassListIndex
		LOCAL laClassList[1,1]
		
		lnClassListIndex=this.oHost.nClassListIndex+1
		ACOPY(this.oHost.aClassList,laClassList)
		lcBaseClass=this.cBaseClass
		lcParentClass=this.cParentClass
		lcClassLibrary=this.cClassLibrary
		WITH this.cboAsClass
			FOR lnCount = 1 TO ALEN(laClassList,1)
				IF lnCount=lnClassListIndex
					LOOP
				ENDIF
				lcClass=laClassList[lnCount,1]
				lcFileName=laClassList[lnCount,6]
				IF lcClass==lcParentClass AND lcFileName==lcClassLibrary
					LOOP
				ENDIF
				lcRedefine=lcClass+","+STRTRAN(lcFileName, "\", "\\")
				lcBaseClass2=laClassList[lnCount,8]+" "
				DO CASE
					CASE lcBaseClass=="checkbox"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","optionbutton ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="combobox"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","listbox  ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="commandgroup"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","optiongroup ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="container"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","custom ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="custom"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","container ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="editbox"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","textbox ","spinner ","label ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="label"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","textbox ","editbox ","spinner ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="line"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","shape ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="listbox"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","combobox ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="optionbutton"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","checkbox ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="optiongroup"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","commandgroup ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="shape"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","line ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="spinner"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","textbox ","editbox ","label ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass=="textbox"
						IF INLIST(lcBaseClass2,lcBaseClass+" ","editbox ","spinner ","label ")
							.AddItem(lcRedefine)
						ENDIF
					CASE lcBaseClass2==(lcBaseClass+" ")
						.AddItem(lcRedefine)
				ENDCASE
			ENDFOR
		ENDWITH
		
	ENDPROC

	PROCEDURE Unload
		RETURN thisform.cAsClass
		
	ENDPROC

	PROCEDURE cboAsClass.AddItem
		LPARAMETERS cItem
		LOCAL lcItem,llMatch,lnCount
		
		lcItem=ALLTRIM(cItem)
		FOR lnCount = 1 TO this.ListCount
			IF LOWER(lcItem)=LOWER(ALLTRIM(this.List[lnCount]))
				llMatch=.T.
				EXIT
			ENDIF
		ENDFOR
		IF llMatch
			NODEFAULT
			RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.cAsClass=.NULL.
		thisform.Release
		
	ENDPROC

	PROCEDURE cmdOfClassLibrary.Click
		LOCAL lcFileName,lcClass,lnAtPos
		
		lcFileName=thisform.oHost.GetFile("vcx",.T.)
		lnAtPos=AT(",",lcFileName)
		IF lnAtPos=0
			RETURN
		ENDIF
		lcClass=ALLTRIM(SUBSTR(lcFileName,lnAtPos+1))
		lcFileName=ALLTRIM(LEFT(lcFileName,lnAtPos-1))
		IF EMPTY(lcFileName) OR NOT FILE(lcFileName)
			RETURN
		ENDIF
		lcClass=lcClass+","+lcFileName
		thisform.cboAsClass.AddItem(lcClass)
		thisform.cboAsClass.DisplayValue=lcClass
		
	ENDPROC

	PROCEDURE cmdRedefine.Click
		thisform.cAsClass=ALLTRIM(thisform.cboAsClass.DisplayValue)
		thisform.Release
		
	ENDPROC

ENDDEFINE
