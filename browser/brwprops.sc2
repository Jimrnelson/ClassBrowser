*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="brwprops.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "browser.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	Name = "Dataenvironment"

ENDDEFINE

DEFINE CLASS frmproperties AS browserdialog OF "browser.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.lblPicture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.txtPicture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.lblText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.txtText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.lblDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.edtDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.lblItemDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.edtItemDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.lblItemPicture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.txtItemPicture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.cmdPicture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfProperties.Page1.cmdItemPicture" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addpropobjects
		*m: defaultreset
		*m: initcontrols
		*m: refreshitemtypes
		*m: releaseitemtypes
		*m: setcaption
		*m: sethelpcontextid
		*p: citemtype
		*p: cpictureext
		*p: ctype
		*p: lapply
		*p: lreadonly
		*p: ndefaultpagecount
		*p: nitemtypecount
		*p: noriginalitemtypecount
		*p: onullcatalogrecord
		*p: oobjectsource
		*p: orecord
		*a: aitemtypes[1,0]
	*</DefinedPropArrayMethod>

	Caption = "Properties"
	citemtype = 
	cpictureext = ico;bmp
	ctype = 
	DoCreate = .T.
	Height = 338
	HelpContextID = 1895825658
	Name = "frmProperties"
	ndefaultpagecount = 1
	nitemtypecount = 0
	noriginalitemtypecount = -1
	onullcatalogrecord = .NULL.
	oobjectsource = .NULL.
	orecord = .NULL.
	Width = 504

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 420, ;
		Name = "cmdCancel", ;
		TabIndex = 4, ;
		Top = 307, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS commandbutton WITH ;
		Caption = "OK", ;
		Default = .T., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 340, ;
		Name = "cmdOK", ;
		TabIndex = 3, ;
		Top = 307, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfProperties' AS pageframe WITH ;
		ErasePage = .T., ;
		Height = 285, ;
		Left = 8, ;
		Name = "pgfProperties", ;
		PageCount = 1, ;
		TabIndex = 1, ;
		TabStretch = 0, ;
		TabStyle = 1, ;
		Top = 12, ;
		Width = 488, ;
		Page1.Caption = "General", ;
		Page1.FontName = "MS Sans Serif", ;
		Page1.FontSize = 8, ;
		Page1.Name = "Page1"
		*< END OBJECT: BaseClass="pageframe" />

	ADD OBJECT 'pgfProperties.Page1.cmdItemPicture' AS getfilebutton WITH ;
		cgetfileext = (thisform.cPictureExt), ;
		cobjname = parent.txtItemPicture, ;
		cproperty = cPicture, ;
		FontName = "MS Sans Serif", ;
		Left = 447, ;
		Name = "cmdItemPicture", ;
		TabIndex = 10, ;
		Top = 131
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfProperties.Page1.cmdPicture' AS getfilebutton WITH ;
		cgetfileext = (thisform.cPictureExt), ;
		cobjname = parent.txtPicture, ;
		cproperty = cPicture, ;
		FontName = "MS Sans Serif", ;
		Left = 447, ;
		Name = "cmdPicture", ;
		TabIndex = 7, ;
		Top = 101
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfProperties.Page1.edtDesc' AS buildereditbox WITH ;
		cproperty = cDesc, ;
		FontName = "MS Sans Serif", ;
		Height = 47, ;
		lallowenter = .T., ;
		Left = 77, ;
		Name = "edtDesc", ;
		nmaxlength = 0, ;
		StatusBarText = "Display description", ;
		TabIndex = 4, ;
		Top = 44, ;
		Width = 390
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="editbox" />

	ADD OBJECT 'pgfProperties.Page1.edtItemDesc' AS buildereditbox WITH ;
		cproperty = cTypeDesc, ;
		FontName = "MS Sans Serif", ;
		Height = 47, ;
		lallowenter = .T., ;
		Left = 77, ;
		Name = "edtItemDesc", ;
		nmaxlength = 0, ;
		StatusBarText = "Item description", ;
		TabIndex = 12, ;
		Top = 160, ;
		Width = 390
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="editbox" />

	ADD OBJECT 'pgfProperties.Page1.lblDesc' AS builderlabel WITH ;
		Caption = "Description:", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 13, ;
		Name = "lblDesc", ;
		TabIndex = 3, ;
		Top = 44, ;
		Width = 58
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="label" />

	ADD OBJECT 'pgfProperties.Page1.lblItemDesc' AS builderlabel WITH ;
		Caption = "Item desc.:", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "lblItemDesc", ;
		TabIndex = 11, ;
		Top = 160, ;
		Width = 54
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="label" />

	ADD OBJECT 'pgfProperties.Page1.lblItemPicture' AS builderlabel WITH ;
		Caption = "Item picture:", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 12, ;
		Name = "lblItemPicture", ;
		TabIndex = 8, ;
		Top = 130, ;
		Width = 60
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="label" />

	ADD OBJECT 'pgfProperties.Page1.lblPicture' AS builderlabel WITH ;
		Caption = "Picture:", ;
		FontName = "MS Sans Serif", ;
		Left = 13, ;
		Name = "lblPicture", ;
		TabIndex = 5, ;
		Top = 100
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="label" />

	ADD OBJECT 'pgfProperties.Page1.lblText' AS builderlabel WITH ;
		Caption = "Name:", ;
		FontName = "MS Sans Serif", ;
		Height = 15, ;
		Left = 13, ;
		Name = "lblText", ;
		TabIndex = 1, ;
		Top = 14, ;
		Width = 33
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="label" />

	ADD OBJECT 'pgfProperties.Page1.txtItemPicture' AS buildertextbox WITH ;
		cproperty = cPicture, ;
		FontName = "MS Sans Serif", ;
		Height = 24, ;
		Left = 77, ;
		lupdateonchange = .F., ;
		Name = "txtItemPicture", ;
		StatusBarText = "Item picture", ;
		TabIndex = 9, ;
		Top = 130, ;
		Width = 365
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfProperties.Page1.txtPicture' AS buildertextbox WITH ;
		cproperty = cPicture, ;
		FontName = "MS Sans Serif", ;
		Height = 24, ;
		Left = 77, ;
		lupdateonchange = .F., ;
		Name = "txtPicture", ;
		StatusBarText = "Picture", ;
		TabIndex = 6, ;
		Top = 100, ;
		Width = 365
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfProperties.Page1.txtText' AS buildertextbox WITH ;
		cproperty = _oEdtObjectLink.cText, ;
		cvalidexpression = NOT EMPTY(Value), ;
		FontName = "MS Sans Serif", ;
		Height = 24, ;
		Left = 77, ;
		lupdateonchange = .F., ;
		Name = "txtText", ;
		StatusBarText = "Display text", ;
		TabIndex = 2, ;
		Top = 14, ;
		Width = 390
		*< END OBJECT: ClassLib="browser.vcx" BaseClass="textbox" />
	
	PROCEDURE addpropobjects
		LOCAL lcClass,lcLabel,lcProperty,lcValidExpr,lcGetFileExt,lcRowSource
		LOCAL lcLabelName,lcObjName,lcGetFileButtonName,lcClauses,lnCount,llDropDown
		LOCAL lnTop,lnLeft,lnWidth,lcTypelnPageNo,lcPageName,lcPageCaption
		LOCAL lcFileName,lcDesc,llAdvancedEditing,llItemTypes,lcBrowserVCXAlias,oTextBox
		LOCAL lnLastPageCount,lnTabIndex,lnObjCount,lnMainPageCount,lnPageCount
		
		thisform.LockScreen=.T.
		lcBrowserVCXAlias=LOWER(SYS(2015))
		SET CLASSLIB TO c:\dev\browser\browser ALIAS (lcBrowserVCXAlias) ADDITIVE 
		llAdvancedEditing=this.oHost.lAdvancedEditing
		lnTabIndex=1
		WITH this.pgfProperties
			lnLastPageCount=.PageCount
			this.nDefaultPageCount=.PageCount
			lnMainPageCount=IIF(llAdvancedEditing,1,0)
			WITH .Page1
				IF this.oObject.lFolder OR this.oObject.lFolderItem
					.txtPicture.cProperty="cFolderPicture"
					.cmdPicture.cProperty="cFolderPicture"
				ELSE
					.RemoveObject("lblItemPicture")
					.RemoveObject("txtItemPicture")
					.RemoveObject("cmdItemPicture")
					.RemoveObject("lblItemDesc")
					.RemoveObject("edtItemDesc")
				ENDIF
			ENDWITH
			lnCount=0
			DO WHILE .T.
				llItemTypes=.F.
				lnCount=lnCount+1
				DO CASE
					CASE lnCount=1 AND llAdvancedEditing AND ;
							(NOT this.oObject.lFolder AND NOT this.oObject.lFolderItem)
						lcPageCaption=M_VIEWS_LOC
						lcClass="AdvancedViewProperties"
						lnMainPageCount=lnMainPageCount+1
					CASE NOT llAdvancedEditing
						EXIT
					CASE lnCount=lnMainPageCount
						lcPageCaption=M_NODE_LOC
						lcClass="AdvancedNodeProperties"
					CASE lnCount=(lnMainPageCount+1)
						lcPageCaption=M_SCRIPTS_LOC
						lcClass="AdvancedScriptProperties"
					CASE lnCount=(lnMainPageCount+2)
						lcPageCaption=M_COMMENTS_LOC
						lcClass="AdvancedCommentProperties"
					CASE lnCount=(lnMainPageCount+3) AND this.oObject.lCatalog AND ;
							this.oHost.nViewType=1
						lcPageCaption=M_ITEM_TYPES_LOC
						lcClass="AdvancedItemTypeProperties"
						llItemTypes=.T.
					OTHERWISE
						EXIT
				ENDCASE
				.PageCount=.PageCount+1
				lnPageCount=.PageCount
				lnPageNo=lnPageCount
				lcPageName="Page"+ALLTRIM(STR(lnPageCount))
				.PageCount=lnPageCount
				WITH .&lcPageName
					.FontName=this.FontName
					.FontSize=this.FontSize
					.FontBold=this.FontBold
					.Caption=lcPageCaption
				ENDWITH
				IF EMPTY(lcClass)
					LOOP
				ENDIF
				WITH .&lcPageName
					lcObjName=LOWER(SYS(2015))
					.AddObject(lcObjName,lcClass)
					WITH .&lcObjname
						.Top=14
						.Left=12
						IF llItemTypes AND NOT this.RefreshItemTypes(.lstItemTypes,.T.)
							.parent.Enabled=.F.
						ELSE
							.Visible=.T.
						ENDIF
					ENDWITH
				ENDWITH
			ENDDO
			this.nDefaultPageCount=.PageCount
		ENDWITH
		lcClass=LOWER(this.oObject.Class)
		lnObjCount=0
		SELECT itemtypes
		SET ORDER TO Class
		LOCATE
		SEEK lcClass
		IF EOF()
			LOCATE
			lcClauses=[ALL FOR Visible AND NOT EMPTY(Label) AND ATC("="+lcClass+CR,ItemTypes)>0]
		ELSE
			lcClauses=[REST FOR Visible AND NOT EMPTY(Label) WHILE ALLTRIM(Class)==lcClass]
		ENDIF
		SCAN &lcClauses 
			IF this.oHost.lRelease
				EXIT
			ENDIF
			lcProperty=ALLTRIM(MLINE(Property,1))
			lcType=TYPE("this.oObject."+lcProperty)
			IF NOT INLIST(lcType,"C","N","L","D","T")
				LOOP
			ENDIF
			lcLabel=ALLTRIM(Label)
			lnWidth=MAX(7*Width,16)+5
			lcValidExpr=ALLTRIM(ValidExpr)
			lcGetFileExt=ALLTRIM(GetFileExt)
			lcRowSource=ALLTRIM(RowSource)
			llDropDown=(NOT EMPTY(lcRowSource) AND INLIST(lcType,"C","N","D","T"))
			IF lnObjCount=0
				this.pgfProperties.Tabs=.T.
			ENDIF
			lnPageNo=INT(lnObjCount/8)+1
			lnPageCount=lnPageNo+this.nDefaultPageCount
			IF lnLastPageCount#lnPageCount
				lnLastPageCount=lnPageCount
				lnTabIndex=1
			ENDIF
			lcPageName="Page"+ALLTRIM(STR(lnPageCount))
			IF this.pgfProperties.PageCount<lnPageCount
				lcPageCaption=ALLTRIM(this.cItemType+" "+this.cType)
				IF lnPageNo>1
					lcPageCaption=lcPageCaption+" ("+ALLTRIM(STR(lnPageNo))+")"
				ENDIF
				this.pgfProperties.PageCount=lnPageCount
				WITH this.pgfProperties.&lcPageName
					.FontName=this.FontName
					.FontSize=this.FontSize
					.FontBold=this.FontBold
					.Caption=lcPageCaption
				ENDWITH
			ENDIF
			WITH this.pgfProperties.&lcPageName
				lnTop=30*MOD(lnObjCount,8)+14
				lnLeft=12
				lnObjCount=lnObjCount+1
				lcObjName=LOWER(SYS(2015))
				IF lcType=="L"
					.AddObject(lcObjName,"BuilderCheckBox")
					WITH .&lcObjName
						.Top=lnTop
						.Left=lnLeft
						.TabIndex=lnTabIndex
						lnTabIndex=lnTabIndex+1
						.Caption=lcLabel
						.lReadOnly=ReadOnly
						.cProperty=lcProperty
						.Refresh
						.Visible=.T.
					ENDWITH
					LOOP
				ENDIF
				lcLabelName=LOWER(SYS(2015))
				.AddObject(lcLabelName,"BuilderLabel")
				WITH .&lcLabelName
					.Top=lnTop
					.Left=lnLeft
					.TabIndex=lnTabIndex
					lnTabIndex=lnTabIndex+1
					.Caption=lcLabel
					.Visible=.T.
				ENDWITH
				.AddObject(lcObjName,IIF(llDropDown,"BuilderComboBox","BuilderTextBox"))
				oTextBox=.&lcObjName
				WITH oTextBox
					.Top=lnTop
					.Left=lnLeft+100
					.Width=lnWidth
					.TabIndex=lnTabIndex
					lnTabIndex=lnTabIndex+1
					.lReadOnly=ReadOnly
					.lUpdateOnChange=.F.
					.cProperty=lcProperty
					.cValidExpression=lcValidExpr
					IF llDropDown
						IF lcType=="N"
							.Style=2
						ENDIF
						IF NOT EMPTY(lcRowSource)
							.RowSourceType=1
							.RowSource=lcRowSource
						ENDIF
					ENDIF
					.Refresh
					.Visible=.T.
				ENDWITH
				IF lcType#"C" OR EMPTY(lcGetFileExt)
					LOOP
				ENDIF
				lcGetFileButtonName=LOWER(SYS(2015))
				.AddObject(lcGetFileButtonName,"GetFileButton")
				WITH .&lcGetFileButtonName
					oTextBox.Width=oTextBox.Width-.Width-6
					.Top=lnTop
					.Left=lnLeft+oTextBox.Width+106
					.TabIndex=lnTabIndex
					lnTabIndex=lnTabIndex+1
					.cGetFileExt=lcGetFileExt
					.cObjName="parent."+lcObjName
					.cProperty=lcProperty
					IF INLIST(LOWER(lcProperty),"cclasslibrary","cfilename")
						.cClassProperty="cClass"
					ENDIF
					.Visible=.T.
				ENDWITH
			ENDWITH
		ENDSCAN
		RELEASE CLASSLIB ALIAS (lcBrowserVCXAlias)
		SELECT 0
		this.LockScreen=.F.
		
	ENDPROC

	PROCEDURE defaultreset
		LPARAMETERS toObject
		
		RETURN
		
	ENDPROC

	PROCEDURE Destroy
		this.ReleaseItemTypes
		this.oObject.oHost.oEdit=.NULL.
		this.oObject._oEdtObjectLink=.NULL.
		IF NOT DODEFAULT()
			RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS oSource,oNode
		
		IF NOT DODEFAULT(oSource) OR TYPE("oNode")#"O" OR ISNULL(oNode)
			RETURN .F.
		ENDIF
		this.oObject=oNode.oLink
		this.oObject.AddProperty("_oEdtObjectLink",oNode)
		this.oObject.oHost.oEdit=.NULL.
		this.cType=PROPER(this.oObject.cType)
		this.cItemType=this.oObject.cItemType
		this.SetCaption
		this.SetHelpContextID
		this.AddPropObjects
		this.InitControls
		this.SetFont
		
	ENDPROC

	PROCEDURE initcontrols
		IF this.oHost.nViewType>1 OR this.oObject.nSourceRecNo<1 OR ;
				NOT this.oObject=this.oObject._oEdtObjectLink
			this.SetAll("lReadOnly",.T.)
			IF this.oObject.nSourceRecNo>=1
				this.pgfProperties.Page1.txtText.lReadOnly=.F.
			ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE refreshitemtypes
		LPARAMETERS toListBox,tlSetListIndex
		LOCAL oFolder,lcText,lcAlias,lnCount,lcLastFilter
		
		this.LockScreen=.T.
		SET MESSAGE TO M_REFRESH_ITEM_TYPES_LOC+" ..."
		toListBox.Clear
		lcAlias=this.oObject.cSourceAlias
		this.nItemTypeCount=0
		DIMENSION this.aItemTypes[1]
		IF this.oHost.nViewType>1 OR EMPTY(lcAlias) OR NOT USED(lcAlias)
			SET MESSAGE TO
			this.LockScreen=.F.
			RETURN .F.
		ENDIF
		SELECT (lcAlias)
		LOCATE
		this.oNullCatalogRecord=this.oHost.oNullRecord.NewInstance(this.DataSessionID)
		this.oNullCatalogRecord.lAutoCommit=.F.
		WITH toListBox
			lnCount=0
			lcLastFilter=FILTER()
			SET FILTER TO NOT DELETED()
			LOCATE
			SCAN ALL FOR UPPER(ALLTRIM(Type))=="CLASS"
				lcText=ALLTRIM(Text)
				IF LEFT(lcText,1)=="*"
					lcText=ALLTRIM(SUBSTR(lcText,2))
				ENDIF
				IF LEFT(lcText,1)=="~"
					lcText=ALLTRIM(SUBSTR(lcText,2))
				ENDIF
				IF EMPTY(lcText) OR LEFT(lcText,1)=="\"
					LOOP
				ENDIF
				lnCount=lnCount+1
				this.nItemTypeCount=lnCount
				DIMENSION this.aItemTypes[lnCount]
				this.aItemTypes[lnCount]=this.oHost.oNullRecord.NewInstance(this.DataSessionID)
				.AddItem(lcText)
			ENDSCAN
			IF tlSetListIndex
				.ListIndex=IIF(.ListCount=0,-1,1)
			ENDIF
			IF NOT EMPTY(lcLastFilter)
				SET FILTER TO &lcLastFilter
				LOCATE
			ENDIF
		ENDWITH
		IF this.nOriginalItemTypeCount=-1
			this.nOriginalItemTypeCount=this.nItemTypeCount
		ENDIF
		SELECT 0
		SET MESSAGE TO
		thisform.LockScreen=.F.
		
	ENDPROC

	PROCEDURE releaseitemtypes
		LOCAL lnCount,oItemType
		
		FOR lnCount = 1 TO this.nItemTypeCount
			oItemType=this.aItemTypes[lnCount]
			IF ISNULL(oItemType)
				LOOP
			ENDIF
			WITH oItemType
				IF this.lApply
					.oRecord.Updated=DATETIME()
				ELSE
					.lAutoCommit=.F.
					IF lnCount>this.nOriginalItemTypeCount
						.Delete
					ELSE
						.Revert
					ENDIF
				ENDIF
				.Release
			ENDWITH
			oItemType=.NULL.
			this.aItemTypes[lnCount]=.NULL.
		ENDFOR
		
	ENDPROC

	PROCEDURE setcaption
		this.Caption=ALLTRIM(this.cItemType+" "+this.cType)+" "+M_PROPERTIES_LOC+" - "+ ;
				ALLTRIM(this.oObject.cText)
		
	ENDPROC

	PROCEDURE sethelpcontextid
		IF this.oObject.lFolder
			IF this.oObject.lCatalog
				this.HelpContextID=1895825658
			ELSE
				this.HelpContextID=1895825659
			ENDIF
		ELSE
			this.HelpContextID=1895825660
		ENDIF
		
	ENDPROC

	PROCEDURE Unload
		IF this.lReadOnly OR NOT this.lObjectUpdated
			RETURN .NULL.
		ENDIF
		RETURN this.lApply
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.Release
		
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.lApply=.T.
		thisform.Release
		
	ENDPROC

	PROCEDURE pgfProperties.Click
		LOCAL lcPageName
		
		thisform.LockScreen=.T.
		lcPageName="Page"+ALLTRIM(STR(this.ActivePage))
		this.&lcPageName..Refresh
		thisform.LockScreen=.F.
		
	ENDPROC

	PROCEDURE pgfProperties.Page1.txtText.LostFocus
		IF NOT DODEFAULT()
			RETURN .F.
		ENDIF
		thisform.SetCaption
		
	ENDPROC

ENDDEFINE
